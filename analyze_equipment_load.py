import pandas as pd
import os

GA_PATH = 'schedule_results_GA.csv'
NSGA2_PATH = 'schedule_results_NSGA2.csv'
OUTPUT_PATH = 'equipment_load_comparison.csv'

COL_DEVICE = 'шо╛хдЗID'
COL_DURATION_H = 'хКах╖ецЧ╢щХ┐(х░ПцЧ╢)'


def load_stats(csv_path: str) -> pd.DataFrame:
    if not os.path.exists(csv_path):
        raise FileNotFoundError(f'цЬкцЙ╛хИ░цЦЗф╗╢: {csv_path}')
    df = pd.read_csv(csv_path)
    # ч╗Яф╕АцХ░хА╝ч▒╗хЮЛ
    if COL_DURATION_H not in df.columns:
        raise KeyError(f'цЦЗф╗╢ф╕нч╝║х░СхИЧ: {COL_DURATION_H}')
    df[COL_DURATION_H] = pd.to_numeric(df[COL_DURATION_H], errors='coerce').fillna(0.0)
    # хИЖч╗Дч╗Яшоб
    grp = df.groupby(COL_DEVICE)
    stats = grp[COL_DURATION_H].sum().to_frame(name='цА╗хКах╖ех░ПцЧ╢').reset_index()
    stats['х╖ех║ПцХ░'] = grp.size().values
    # хНацпФ
    total_hours = stats['цА╗хКах╖ех░ПцЧ╢'].sum()
    stats['х░ПцЧ╢хНацпФ(%)'] = (stats['цА╗хКах╖ех░ПцЧ╢'] / total_hours * 100).round(2) if total_hours > 0 else 0
    return stats.sort_values('цА╗хКах╖ех░ПцЧ╢', ascending=False)


def main():
    ga = load_stats(GA_PATH)
    ns = load_stats(NSGA2_PATH)

    # хРИх╣╢хп╣цпФ
    comp = pd.merge(ga, ns, on=COL_DEVICE, how='outer', suffixes=('_GA', '_NSGA2'))
    for col in ['цА╗хКах╖ех░ПцЧ╢_GA', 'цА╗хКах╖ех░ПцЧ╢_NSGA2', 'х╖ех║ПцХ░_GA', 'х╖ех║ПцХ░_NSGA2', 'х░ПцЧ╢хНацпФ(%)_GA', 'х░ПцЧ╢хНацпФ(%)_NSGA2']:
        if col not in comp.columns:
            comp[col] = 0
        comp[col] = comp[col].fillna(0)
    comp['х░ПцЧ╢х╖о(N2-GA)'] = (comp['цА╗хКах╖ех░ПцЧ╢_NSGA2'] - comp['цА╗хКах╖ех░ПцЧ╢_GA']).round(2)
    comp['х╖ех║Пх╖о(N2-GA)'] = comp['х╖ех║ПцХ░_NSGA2'] - comp['х╖ех║ПцХ░_GA']

    comp = comp.sort_values('цА╗хКах╖ех░ПцЧ╢_NSGA2', ascending=False)
    comp.to_csv(OUTPUT_PATH, index=False)

    print('\nтЬЕ шо╛хдЗш┤Яш╜╜хп╣цпФх╖▓хп╝хЗ║ ->', OUTPUT_PATH)
    # цЙУхН░EQ-04цСШшжБ
    eq = comp[comp[COL_DEVICE] == 'EQ-04']
    if eq.empty:
        print('EQ-04хЬиNSGA-IIцИЦGAф╕нцЬкшвлф╜┐чФиуАВ')
    else:
        row = eq.iloc[0]
        print('\nЁЯУМ EQ-04цСШшжБ:')
        print(f"  - GA: х╖ех║ПцХ░={int(row['х╖ех║ПцХ░_GA'])}, цА╗х░ПцЧ╢={row['цА╗хКах╖ех░ПцЧ╢_GA']:.2f}, хНацпФ={row['х░ПцЧ╢хНацпФ(%)_GA']:.2f}%")
        print(f"  - NSGA2: х╖ех║ПцХ░={int(row['х╖ех║ПцХ░_NSGA2'])}, цА╗х░ПцЧ╢={row['цА╗хКах╖ех░ПцЧ╢_NSGA2']:.2f}, хНацпФ={row['х░ПцЧ╢хНацпФ(%)_NSGA2']:.2f}%")
        print(f"  - х╖ох╝В: х╖ех║Пх╖о={int(row['х╖ех║Пх╖о(N2-GA)'])}, х░ПцЧ╢х╖о={row['х░ПцЧ╢х╖о(N2-GA)']:.2f}")

    # цЙУхН░NSGA-IIф╕ЛхЙН5ш┤Яш╜╜шо╛хдЗ
    print('\nЁЯПн NSGA-IIф╕Лш┤Яш╜╜Top5шо╛хдЗ:')
    cols_show = [COL_DEVICE, 'х╖ех║ПцХ░_NSGA2', 'цА╗хКах╖ех░ПцЧ╢_NSGA2', 'х░ПцЧ╢хНацпФ(%)_NSGA2']
    print(comp[cols_show].head(5).to_string(index=False))


if __name__ == '__main__':
    main()